const int pingPinOut = 13; // Pin connected to the trigger of the sonar sensor
const int pingPinIn = 12;  // Pin connected to the echo of the sonar sensor

void setup() {
  // initialize serial communication:
  Serial.begin(9600);
  
  // Set the pins connected to trigger/echo to output/input respectively
  pinMode(pingPinOut, OUTPUT);
  pinMode(pingPinIn, INPUT);
}

void loop()
{
  // create variables to calculate results for time
  // and the distance result in inches and centimeters
  long duration, inches, cm;

  // The HC-SR04 requires the trigger to supply a 10uS pulse
  // to do this we first set the trigger to LOW to make sure we get a clean pulse,
  // then we assert the pin connected to the trigger, wait 10uS, and then set it back to LOW
  // An 8-cycle burst of ultrasound at 40kHz is emitted after the falling edge of this pulse
  digitalWrite(pingPinOut, LOW);
  delayMicroseconds(2);
  digitalWrite(pingPinOut, HIGH);
  delayMicroseconds(10);
  digitalWrite(pingPinOut, LOW);

  // Now we need to measure the time until the echo pin reads the returned ultrasound. The 
  // function pulseIn() does this for us. It returns the duration in microseconds between the
  // time the function was called and a 'HIGH' value is read in on the 'pingPinIn' pin.
  duration = pulseIn(pingPinIn, HIGH);

  // convert the time into distance (inch and cm)
  inches = microsecondsToInches(duration);
  cm = microsecondsToCentimeters(duration);
  
  Serial.print(inches);
  Serial.print("in, ");
  Serial.print(cm);
  Serial.print("cm");
  Serial.println();
  
  delay(100);
}

long microsecondsToInches(long microseconds)
{
  // According to ElecFreak's datasheet for the HC-SR04, the formula for
  // calculating the distance in inches is uS/148
  return microseconds / 148;
}

long microsecondsToCentimeters(long microseconds)
{
  // According to ElecFreak's datasheet for the HC-SR04, the formula for
  // calculating the distance in centimeters is uS/58
  return microseconds / 58;
}